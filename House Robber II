class Solution {
  
      private:
    int solve1(int i,vector<int>&dp1,vector<int>& nums,int m){
    
         dp1[1]=nums[1];
        
       
        for(i=2;i<m;i++){
            
              int take=nums[i];
            
            if(i>1){
           take+=dp1[i-2];}
            
             int nottake=0+dp1[i-1];
          
        dp1[i]=max(take,nottake);
            
        }
        return dp1[m-1];
    
    }
    
    
    
    private:
    
    
    int solve(int i,vector<int>&dp,vector<int>& nums,int n){
        
         dp[0]=nums[0];
        
        
        for(i=1;i<n-1;i++){
            
              int take=nums[i];
            
            if(i>1){
           take+=dp[i-2];}
            
             int nottake=0+dp[i-1];
          
        dp[i]=max(take,nottake);
            
        }
        return dp[n-2];
        
    }
    
    
 
public:
    int rob(vector<int>& nums) {
         if(nums.size()==1){
            return nums[0];
        }
         if(nums.size()==0){
            return 0;
        }
        
        
         int n=nums.size();
        int m=nums.size();
      
         vector<int>dp(n,0);
      
     
        
      int a= solve(0,dp,nums,n);
        
          vector<int>dp1(m,0);
        
        
        int b=solve1(1,dp1,nums,m);
    
        int c=max(a,b);
        return c;
        
        
    
        
        
    }
};
